From a47a7953b1e0c9efeb98df0b6fa4eec548d952cb Mon Sep 17 00:00:00 2001
From: tntse <samoht.est@gmail.com>
Date: Thu, 3 Nov 2016 17:22:46 -0700
Subject: [PATCH 1/1] Adding exercise 8, camera-dialog

---
 app/src/main/AndroidManifest.xml                   |  3 +
 .../csc780/chathub/ui/ImageDialogFragment.java     | 75 ++++++++++++++++++++++
 .../edu/sfsu/csc780/chathub/ui/MainActivity.java   | 55 +++++++++++++++-
 .../edu/sfsu/csc780/chathub/ui/MessageUtil.java    | 11 +++-
 .../main/res/drawable/ic_camera_alt_black_24px.xml | 12 ++++
 app/src/main/res/layout/activity_main.xml          |  9 +++
 app/src/main/res/layout/image_dialog_layout.xml    | 16 +++++
 7 files changed, 178 insertions(+), 3 deletions(-)
 create mode 100644 app/src/main/java/edu/sfsu/csc780/chathub/ui/ImageDialogFragment.java
 create mode 100644 app/src/main/res/drawable/ic_camera_alt_black_24px.xml
 create mode 100644 app/src/main/res/layout/image_dialog_layout.xml

diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
index 15a7bac..f87dc93 100644
--- a/app/src/main/AndroidManifest.xml
+++ b/app/src/main/AndroidManifest.xml
@@ -3,6 +3,9 @@
     package="edu.sfsu.csc780.chathub">
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
+
+    <uses-feature android:name="android.hardware.camera" android:required="true" />
+
     <application
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
diff --git a/app/src/main/java/edu/sfsu/csc780/chathub/ui/ImageDialogFragment.java b/app/src/main/java/edu/sfsu/csc780/chathub/ui/ImageDialogFragment.java
new file mode 100644
index 0000000..28165c0
--- /dev/null
+++ b/app/src/main/java/edu/sfsu/csc780/chathub/ui/ImageDialogFragment.java
@@ -0,0 +1,75 @@
+package edu.sfsu.csc780.chathub.ui;
+
+import android.app.Dialog;
+import android.graphics.Bitmap;
+import android.graphics.Point;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Bundle;
+import android.support.v4.app.DialogFragment;
+import android.support.v7.app.AlertDialog;
+import android.view.Display;
+import android.view.View;
+import android.widget.ImageView;
+
+import edu.sfsu.csc780.chathub.R;
+
+/**
+ * Created by thomastse on 11/2/16.
+ */
+
+public class ImageDialogFragment extends DialogFragment {
+
+    public static final String PHOTO_BITMAP = "Photo";
+    public static final int SIDE_MARGIN = 0;
+    private Bitmap mPhotoBitmap;
+    private int mScaledWidth;
+    private int mScaledHeight;
+
+    static ImageDialogFragment newInstance(Bitmap bitmap) {
+        ImageDialogFragment f = new ImageDialogFragment();
+        Bundle args = new Bundle();
+        args.putParcelable(PHOTO_BITMAP, bitmap);
+        f.setArguments(args);
+        return f;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mPhotoBitmap = getArguments().getParcelable(PHOTO_BITMAP);
+        int imageWidth = mPhotoBitmap.getWidth();
+        int imageHeight = mPhotoBitmap.getHeight();
+        Display display = getActivity().getWindowManager().getDefaultDisplay();
+        Point size = new Point();
+        display.getSize(size);
+        int width = size.x;
+        mScaledWidth = (int)((double)width - SIDE_MARGIN);
+        mScaledHeight = (int)((double)imageHeight / (double)imageWidth * mScaledWidth);
+    }
+
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        View view = getActivity().getLayoutInflater().inflate(R.layout.image_dialog_layout, null);
+        //TODO: 1.get the photoImageView from the root view
+        ImageView mPhotoImageView = (ImageView)view.findViewById(R.id.photoImageView);
+
+        //TODO: 2.set layout parameters of photoImageView to the dimensions that were set in...
+        //TODO: ...the constructor
+
+        mPhotoImageView.setMaxWidth(mScaledWidth);
+        mPhotoImageView.setMaxHeight(mScaledHeight);
+
+        builder.setView(view);
+        //TODO: 3. set ImageBitmap of photoImageView to the bitmap from the constructor argument
+
+        mPhotoImageView.setImageBitmap(mPhotoBitmap);
+
+        final Dialog dialog = builder.create(); dialog.getWindow().setBackgroundDrawable(
+                new ColorDrawable(android.graphics.Color.TRANSPARENT));
+        dialog.show();
+        return dialog;
+    }
+
+
+}
diff --git a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java
index 2014a6d..f4d12ac 100644
--- a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java
+++ b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java
@@ -27,6 +27,8 @@ import android.preference.PreferenceManager;
 import android.provider.MediaStore;
 import android.support.annotation.NonNull;
 import android.support.design.widget.FloatingActionButton;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.app.FragmentTransaction;
 import android.support.v4.app.LoaderManager;
 import android.support.v4.content.Loader;
 import android.support.v7.app.AppCompatActivity;
@@ -42,9 +44,11 @@ import android.view.MenuItem;
 import android.view.View;
 import android.widget.EditText;
 import android.widget.ImageButton;
+import android.widget.ImageView;
 import android.widget.ProgressBar;
 import android.widget.Toast;
 
+import com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable;
 import com.firebase.ui.database.FirebaseRecyclerAdapter;
 import com.google.android.gms.auth.api.Auth;
 import com.google.android.gms.common.ConnectionResult;
@@ -78,6 +82,8 @@ public class MainActivity extends AppCompatActivity
     private static final double MAX_LINEAR_DIMENSION = 500.0;
     public static final String ANONYMOUS = "anonymous";
     private static final int REQUEST_PICK_IMAGE = 1;
+    private static final int REQUEST_TAKE_PHOTO = 100;
+
     private String mUsername;
     private String mPhotoUrl;
     private SharedPreferences mSharedPreferences;
@@ -98,6 +104,19 @@ public class MainActivity extends AppCompatActivity
     private ImageButton mImageButton;
     private int mSavedTheme;
     private ImageButton mLocationButton;
+    private ImageButton mCameraButton;
+
+    private View.OnClickListener mImageClickListener = new View.OnClickListener() {
+        @Override
+        public void onClick(View v) {
+            ImageView photoView = (ImageView) v.findViewById(R.id.messageImageView);
+            // Only show the larger view in dialog if there's a image for the message
+            if (photoView.getVisibility() == View.VISIBLE) {
+                Bitmap bitmap = ((GlideBitmapDrawable) photoView.getDrawable()).getBitmap();
+                showPhotoDialog(ImageDialogFragment.newInstance(bitmap) );
+            }
+        }
+    };
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -136,7 +155,7 @@ public class MainActivity extends AppCompatActivity
         mFirebaseAdapter = MessageUtil.getFirebaseAdapter(this,
                 this,  /* MessageLoadListener */
                 mLinearLayoutManager,
-                mMessageRecyclerView);
+                mMessageRecyclerView, mImageClickListener);
         mMessageRecyclerView.setAdapter(mFirebaseAdapter);
 
         mProgressBar.setVisibility(ProgressBar.INVISIBLE);
@@ -193,6 +212,14 @@ public class MainActivity extends AppCompatActivity
                 loadMap();
             }
         });
+
+        mCameraButton = (ImageButton) findViewById(R.id.cameraButton);
+        mCameraButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                dispatchTakePhotoIntent();
+            }
+        });
     }
 
     @Override
@@ -310,6 +337,13 @@ public class MainActivity extends AppCompatActivity
                 DesignUtils.applyColorfulTheme(this);
                 this.recreate();
             }
+        } else if (requestCode == REQUEST_TAKE_PHOTO && resultCode == Activity.RESULT_OK){
+            Bundle extras = data.getExtras();
+            if(extras != null){
+                Bitmap image = (Bitmap) extras.get("data");
+                Uri uri = savePhotoImage(image);
+                createImageMessage(uri);
+            }
         }
     }
 
@@ -441,4 +475,23 @@ public class MainActivity extends AppCompatActivity
         mLocationButton.setEnabled(false);
         loader.forceLoad();
     }
+
+    private void dispatchTakePhotoIntent(){
+        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+        if(intent.resolveActivity(getPackageManager()) != null)
+            startActivityForResult(intent, REQUEST_TAKE_PHOTO);
+
+    }
+
+    void showPhotoDialog(DialogFragment dialogFragment) {
+        // DialogFragment.show() will take care of adding the fragment
+        // in a transaction. We also want to remove any currently showing
+        // dialog, so make our own transaction and take care of that here.
+        FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
+        android.support.v4.app.Fragment prev =
+                getSupportFragmentManager().findFragmentByTag("dialog"); if (prev != null) { ft.remove(prev); }
+        ft.addToBackStack(null);
+        dialogFragment.show(ft, "dialog");
+    }
+
 }
diff --git a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java
index 56f1adc..86429ac 100644
--- a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java
+++ b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java
@@ -41,6 +41,8 @@ public class MessageUtil {
     private static FirebaseStorage sStorage = FirebaseStorage.getInstance();
     private static MessageLoadListener sAdapterListener;
     private static FirebaseAuth sFirebaseAuth;
+    private static View.OnClickListener sMessageClickListener;
+
     public interface MessageLoadListener { public void onLoadComplete(); }
 
     public static void send(ChatMessage chatMessage) {
@@ -54,6 +56,7 @@ public class MessageUtil {
         public CircleImageView messengerImageView;
         public TextView timestampTextView;
         public View messageLayout;
+
         public MessageViewHolder(View v) {
             super(v);
             messageTextView = (TextView) itemView.findViewById(R.id.messageTextView);
@@ -62,13 +65,15 @@ public class MessageUtil {
             messageImageView = (ImageView) itemView.findViewById(R.id.messageImageView);
             timestampTextView = (TextView) itemView.findViewById(R.id.timestampTextView);
             messageLayout = (View) itemView.findViewById(R.id.messageLayout);
+            v.setOnClickListener(sMessageClickListener);
         }
     }
 
     public static FirebaseRecyclerAdapter getFirebaseAdapter(final Activity activity,
                                                              MessageLoadListener listener,
                                                              final LinearLayoutManager linearManager,
-                                                             final RecyclerView recyclerView) {
+                                                             final RecyclerView recyclerView,
+                                                             final View.OnClickListener onclicklistener) {
         final SharedPreferences preferences =
                 PreferenceManager.getDefaultSharedPreferences(activity);
         sAdapterListener = listener;
@@ -145,7 +150,7 @@ public class MessageUtil {
                 }
 
                 long timestamp = chatMessage.getTimestamp();
-                if (timestamp == 0 || timestamp == chatMessage.NO_TIMESTAMP ) {
+                if (timestamp == 0 || timestamp == chatMessage.NO_TIMESTAMP) {
                     viewHolder.timestampTextView.setVisibility(View.GONE);
                 } else {
                     viewHolder.timestampTextView.setText(DesignUtils.formatTime(activity,
@@ -156,6 +161,8 @@ public class MessageUtil {
             }
         };
 
+        sMessageClickListener = onclicklistener;
+
         adapter.registerAdapterDataObserver(new RecyclerView.AdapterDataObserver() {
             @Override
             public void onItemRangeInserted(int positionStart, int itemCount) {
diff --git a/app/src/main/res/drawable/ic_camera_alt_black_24px.xml b/app/src/main/res/drawable/ic_camera_alt_black_24px.xml
new file mode 100644
index 0000000..d983072
--- /dev/null
+++ b/app/src/main/res/drawable/ic_camera_alt_black_24px.xml
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:pathData="M12,12m-3.2,0a3.2,3.2 0,1 1,6.4 0a3.2,3.2 0,1 1,-6.4 0"
+        android:fillColor="#000000"/>
+    <path
+        android:pathData="M9,2L7.17,4L4,4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2L22,6c0,-1.1 -0.9,-2 -2,-2h-3.17L15,2L9,2zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5z"
+        android:fillColor="#000000"/>
+</vector>
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
index df414cf..60eb697 100644
--- a/app/src/main/res/layout/activity_main.xml
+++ b/app/src/main/res/layout/activity_main.xml
@@ -42,6 +42,15 @@
                 android:layout_weight="1"/>
 
             <ImageButton
+                android:id="@+id/cameraButton"
+                android:src="@drawable/ic_camera_alt_black_24px"
+                android:background="@drawable/button_ripple"
+                android:layout_gravity="center_vertical"
+                android:padding="16dp"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"/>
+
+            <ImageButton
                 android:id="@+id/locationButton"
                 android:src="@drawable/ic_my_location_black_24px"
                 android:background="@drawable/button_ripple"
diff --git a/app/src/main/res/layout/image_dialog_layout.xml b/app/src/main/res/layout/image_dialog_layout.xml
new file mode 100644
index 0000000..4b5fc4a
--- /dev/null
+++ b/app/src/main/res/layout/image_dialog_layout.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tools="http://schemas.android.com/tools">
+    <ImageView
+        android:layout_width="240dp"
+        android:layout_height="240dp"
+        android:padding="10dp"
+        android:background="#ffffff"
+        android:id="@+id/photoImageView"
+        tools:src="@drawable/common_ic_googleplayservices"
+        android:scaleType="fitCenter"
+        android:layout_gravity="center"/>
+</FrameLayout>
\ No newline at end of file
-- 
2.9.3 (Apple Git-75)

